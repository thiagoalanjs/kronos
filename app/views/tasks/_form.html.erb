<script>
        tinymce.init({
                selector: 'textarea#file-picker',
                height: 300,
                menubar:false,
                plugins: 'undo redo | formatselect | bold italic backcolor | removeformat | table | link | image | media ',
                toolbar: 'undo redo | formatselect | bold italic backcolor | removeformat | table | link | image | media ',
                image_title: true,
                automatic_uploads: true,
                file_picker_types: 'image, media',
                /* and here's our custom image picker*/
                file_picker_callback: function (cb, value, meta) {
                  var input = document.createElement('input');
                  input.setAttribute('type', 'file');
                  input.setAttribute('accept', 'image/*, media/*');

                  input.onchange = function () {
                    var file = this.files[0];

                    var reader = new FileReader();
                    reader.onload = function () {
                 
                      var id = 'blobid' + (new Date()).getTime();
                      var blobCache =  tinymce.activeEditor.editorUpload.blobCache;
                      var base64 = reader.result.split(',')[1];
                      var blobInfo = blobCache.create(id, file, base64);
                      blobCache.add(blobInfo);

                      cb(blobInfo.blobUri(), { title: file.name });
                    };
                    reader.readAsDataURL(file);
                  };

                  input.click();
                },
          content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'
         });
 </script>
<div class="container">
  <br >
  <br >
  
    <%= form_for(@task, html: {class: 'form'})  do |f| %>
       <% if @task.errors.any? %>
        <div class="alert_danger">
           <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
              <div class="header">
            <% @task.errors.full_messages.each do |message| %>
                <p> - <%= message %> </p>
            <% end %>
          </div>
          </div>
       <% end %>
    
              <div>
                <b><%= f.label :title %></b>
                <br />
                <%= f.text_field :title %>
              </div>

              <div>
                <b><%= f.label :status %></b>
                <br />
                  <%= f.select :status, options_for_select({'Pendente' => 1 , 'Desenvolvimento' => 2 , 'Code Review' => 3, 'QA' => 4 , 'Concluída' => 5 }), {:prompt => false}, {  placeholder: 'Status' } %>
              </div>

              <div>
                <b><%= f.label :description %></b>
                <br />
                <%= f.text_area :description, class: "TinyMCE", id: "file-picker" %>
              </div>

        
              <div>               
                <br />
                <b><%= f.label :user_story_id %></b>
                <br />
                <%= f.collection_select(:user_story_id, current_project.user_stories, :id, :title,  { prompt: 'Selecionar user story' } ) %>
              
              </div>

              <div>
                <br />
                <b><%= f.label :kind_id %></b>
                <br />
                <%= f.select :kind_id, Kind.all.collect {|x| [x.name, x.id]}, { prompt: 'Selecionar o tipo de tarefa' } %>
              </div>
 
               <div>
                <br />
                <b><%= f.label :priority_id %></b>
                <br />
                <%= f.select :priority_id, Priority.all.collect {|x| [x.name, x.id]}, { prompt: 'Selecionar a prioridade da tarefa' } %>
              </div>

                <div>
                <br />
                <b> Atribuir para:</b>
                <br />
                <%= f.select :function_user_project_id, FunctionUserProject.all.collect {|x| ["#{x.user.name}"' - '"#{x.user.email}",  x.id]}, { prompt: 'Selecionar um responsável' } %>
              </div>
              <br />

               <%= f.hidden_field :user_id, :value => current_user.id %>   
          <div>
              <b> Selecione o campo abaixo se tiver impedimentos </b>
              <br/>
              <%= f.check_box :impediment, {}, "true", "false"%>
          </div>
         
         
         <div> 
         <br />
            <%= link_to 'Salvar', new_task_path({controller: 'task', action: 'create'}), class: 'save blue_button' %>
            <%= link_to 'Cancelar', user_stories_path, class: 'red_button' %>
            <br />
            <br />
         </div>
      <% end %>

    </div>

</div>    


<script type="text/javascript">
  $('.save').click(function(){
    $('form').submit(); 
  });
</script>